{
    "swagger": "2.0",
    "info": {
        "description": "Encrypted Processing API engine",
        "title": "Encproc API engine",
        "contact": {
            "name": "Encproc Dev Team",
            "url": "https://pseudocrypt.site",
            "email": "encproc@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.1"
    },
    "host": "pseudocrypt.site",
    "basePath": "/",
    "paths": {
        "/contribute/aggregate/{id}": {
            "post": {
                "description": "Contribute data to an existing aggregate by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BasicAPI"
                ],
                "summary": "Contribute to an existing aggregate",
                "parameters": [
                    {
                        "description": "Stream ID",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "BASE64 encoded Ciphertext",
                        "name": "ct",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.ConttributeAggregateResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/create-stream": {
            "post": {
                "security": [
                    {
                        "APIKeyAuth": []
                    }
                ],
                "description": "Create a new stream with the provided public key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BasicAPI"
                ],
                "summary": "Create a new stream",
                "parameters": [
                    {
                        "description": "BASE64 encoded Public Key",
                        "name": "pk",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.CreateStreamResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/public-key/{id}": {
            "get": {
                "description": "Retrieve the public key (base64-encoded) associated with the given ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BasicAPI"
                ],
                "summary": "Retrieve the public key associated with a given ID",
                "parameters": [
                    {
                        "description": "Stream ID",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.GetPublicKeyResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/snapshot/aggregate/{id}": {
            "get": {
                "description": "Make a snapshot of an existing aggregate by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BasicAPI"
                ],
                "summary": "Make a snapshot of an existing aggregate",
                "parameters": [
                    {
                        "description": "Stream ID",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.ReturnAggregateResponse"
                        }
                    },
                    "222": {
                        "description": "Request successful, but no aggregate available. Try again later.",
                        "schema": {
                            "$ref": "#/definitions/main.ReturnAggregateNoneAvailableResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "main.ConttributeAggregateResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "main.CreateStreamResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "main.GetPublicKeyResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string"
                }
            }
        },
        "main.ReturnAggregateNoneAvailableResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "main.ReturnAggregateResponse": {
            "type": "object",
            "properties": {
                "ct_aggr_byte_base64": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "sample_size": {
                    "type": "integer"
                }
            }
        }
    }
}